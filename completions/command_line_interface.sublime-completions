{
    "scope": "source.python",
    "completions": [
        {
            "trigger": "flask.cli.FlaskGroup(add_default_commands=True, create_app=None, **extra)\t flask.cli.FlaskGroup",
            "contents": "flask.cli.FlaskGroup(${1:add_default_commands=True}, ${2:create_app=None}, ${3:**extra})$0"
        },
        {
            "trigger": "flask.cli.AppGroup(name=None, commands=None, **attrs)\t flask.cli.FlaskGroup",
            "contents": "flask.cli.AppGroup(${1:name=None}, ${2:commands=None}, ${3:**attrs})$0"
        },
        {
            "trigger": "command(*args, **kwargs)\t flask.cli.FlaskGroup",
            "contents": "command(${1:*args}, ${2:**kwargs})$0"
        },
        {
            "trigger": "group(*args, **kwargs)\t flask.cli.FlaskGroup",
            "contents": "group(${1:*args}, ${2:**kwargs})$0"
        },
        {
            "trigger": "flask.cli.ScriptInfo(app_import_path=None, create_app=None)\t flask.cli.FlaskGroup",
            "contents": "flask.cli.ScriptInfo(${1:app_import_path=None}, ${2:create_app=None})$0"
        },
        {
            "trigger": "app_import_path = None\t flask.cli.FlaskGroup",
            "contents": "app_import_path = None$0"
        },
        {
            "trigger": "create_app = None\t flask.cli.FlaskGroup",
            "contents": "create_app = None$0"
        },
        {
            "trigger": "data = None\t flask.cli.FlaskGroup",
            "contents": "data = None$0"
        },
        {
            "trigger": "load_app()\t flask.cli.FlaskGroup",
            "contents": "load_app()$0"
        },
        {
            "trigger": "flask.cli.with_appcontext(f)\t flask.cli.FlaskGroup",
            "contents": "flask.cli.with_appcontext(${1:f})$0"
        },
        {
            "trigger": "flask.cli.pass_script_info(f)\t flask.cli.FlaskGroup",
            "contents": "flask.cli.pass_script_info(${1:f})$0"
        },
        {
            "trigger": "flask.cli.run_command = <click.core.Command object>\t flask.cli.FlaskGroup",
            "contents": "flask.cli.run_command = <click.core.Command object>$0"
        },
        {
            "trigger": "flask.cli.shell_command = <click.core.Command object>\t flask.cli.FlaskGroup",
            "contents": "flask.cli.shell_command = <click.core.Command object>$0"
        }
    ]
}