{
    "scope": "source.python",
    "completions": [
        {
            "trigger": "flask.current_app\t flask.Markup",
            "contents": "flask.current_app$0"
        },
        {
            "trigger": "flask.has_request_context()\t flask.Markup",
            "contents": "flask.has_request_context()$0"
        },
        {
            "trigger": "flask.copy_current_request_context(f)\t flask.Markup",
            "contents": "flask.copy_current_request_context(${1:f})$0"
        },
        {
            "trigger": "flask.has_app_context()\t flask.Markup",
            "contents": "flask.has_app_context()$0"
        },
        {
            "trigger": "flask.url_for(endpoint, values)\t flask.Markup",
            "contents": "flask.url_for(${1:endpoint}, ${2:values})$0"
        },
        {
            "trigger": "flask.abort(code)\t flask.Markup",
            "contents": "flask.abort(${1:code})$0"
        },
        {
            "trigger": "flask.redirect(location, code=302, Response=None)\t flask.Markup",
            "contents": "flask.redirect(${1:location}, ${2:code=302}, ${3:Response=None})$0"
        },
        {
            "trigger": "flask.make_response(*args)\t flask.Markup",
            "contents": "flask.make_response(${1:*args})$0"
        },
        {
            "trigger": "flask.after_this_request(f)\t flask.Markup",
            "contents": "flask.after_this_request(${1:f})$0"
        },
        {
            "trigger": "flask.send_file(filename_or_fp, mimetype=None, as_attachment=False, attachment_filename=None, add_etags=True, cache_timeout=None, conditional=False)\t flask.Markup",
            "contents": "flask.send_file(${1:filename_or_fp}, ${2:mimetype=None}, ${3:as_attachment=False}, ${4:attachment_filename=None}, ${5:add_etags=True}, ${6:cache_timeout=None}, ${7:conditional=False})$0"
        },
        {
            "trigger": "flask.send_from_directory(directory, filename, options)\t flask.Markup",
            "contents": "flask.send_from_directory(${1:directory}, ${2:filename}, ${3:options})$0"
        },
        {
            "trigger": "flask.safe_join(directory, filename)\t flask.Markup",
            "contents": "flask.safe_join(${1:directory}, ${2:filename})$0"
        },
        {
            "trigger": "flask.escape(s)\t flask.Markup",
            "contents": "flask.escape(${1:s})$0"
        },
        {
            "trigger": "flask.Markup\t flask.Markup",
            "contents": "flask.Markup$0"
        },
        {
            "trigger": "classmethod escape(s)\t flask.Markup",
            "contents": "classmethod escape(${1:s})$0"
        },
        {
            "trigger": "striptags()\t flask.Markup",
            "contents": "striptags()$0"
        },
        {
            "trigger": "unescape()\t flask.Markup",
            "contents": "unescape()$0"
        }
    ]
}